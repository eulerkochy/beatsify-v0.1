/*
 * Artist
 * Add methods to ArtistEntity
 */
'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _entitiesArtistEntity = require('../entities/ArtistEntity');

var _entitiesArtistEntity2 = _interopRequireDefault(_entitiesArtistEntity);

var _handlersArtistHandler = require('../handlers/ArtistHandler');

var _handlersArtistHandler2 = _interopRequireDefault(_handlersArtistHandler);

var _Factory = require('../Factory');

var _Factory2 = _interopRequireDefault(_Factory);

var Artist = (function (_ArtistEntity) {
    _inherits(Artist, _ArtistEntity);

    function Artist(data) {
        _classCallCheck(this, Artist);

        _get(Object.getPrototypeOf(Artist.prototype), 'constructor', this).call(this, data);
    }

    /*
     * @public 
     * @return {Collection} albumsCollection
     */

    _createClass(Artist, [{
        key: 'albums',
        value: function albums() {
            return new _handlersArtistHandler2['default']().albums(this.id);
        }

        /*
         * @public 
         * @param {object} query Optional query parameters.
         * @return {Collection} tracksCollection
         */
    }, {
        key: 'topTracks',
        value: function topTracks(query) {
            return new _handlersArtistHandler2['default']().topTracks(this.id, query);
        }

        /*
         * @public 
         * @param {object} query Optional query parameters.
         * @return {Collection} artistsCollection
         */
    }, {
        key: 'relatedArtists',
        value: function relatedArtists(query) {
            return new _handlersArtistHandler2['default']().relatedArtists(this.id, query);
        }

        /*
         * @public 
         * @param {object} query Optional query parameters.
         * @return {object}
         */
    }, {
        key: 'follow',
        value: function follow(query) {
            return new _handlersArtistHandler2['default']().follow([this.id], query);
        }

        /*
         * @public 
         * @param {object} query Optional query parameters.
         * @return {object}
         */
    }, {
        key: 'unfollow',
        value: function unfollow(query) {
            return new _handlersArtistHandler2['default']().unfollow([this.id], query);
        }
    }]);

    return Artist;
})(_entitiesArtistEntity2['default']);

exports['default'] = Artist;
module.exports = exports['default'];