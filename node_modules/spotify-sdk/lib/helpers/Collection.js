/*
 * Collection
 * Add methods to CollectionEntity
 */
'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _entitiesCollectionEntity = require('../entities/CollectionEntity');

var _entitiesCollectionEntity2 = _interopRequireDefault(_entitiesCollectionEntity);

var _Factory = require('../Factory');

var _Factory2 = _interopRequireDefault(_Factory);

var Collection = (function (_CollectionEntity) {
    _inherits(Collection, _CollectionEntity);

    function Collection(data) {
        _classCallCheck(this, Collection);

        _get(Object.getPrototypeOf(Collection.prototype), 'constructor', this).call(this, data);
    }

    /*
     * @public 
     * @override
     * @return {Collection} Collection
     */

    _createClass(Collection, [{
        key: 'first',

        /*
         * @public 
         * @return {Entity} Entity
         */
        value: function first() {
            return this[0];
        }

        /*
         * @public 
         * @return {Entity} Entity
         */
    }, {
        key: 'last',
        value: function last() {
            return this[this.length - 1];
        }

        /*
         * @public 
         * @return {Entity} Entity
         */
    }, {
        key: 'index',
        value: function index(id) {
            return this[id];
        }
    }, {
        key: 'next',
        get: function get() {
            return (0, _Factory2['default'])({ href: this._next });
        }

        /*
         * @public 
         * @override
         * @return {Collection} Collection
         */
    }, {
        key: 'previous',
        get: function get() {
            return (0, _Factory2['default'])({ href: this._next });
        }
    }]);

    return Collection;
})(_entitiesCollectionEntity2['default']);

exports['default'] = Collection;
module.exports = exports['default'];